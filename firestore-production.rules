rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Funções auxiliares para verificação
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function requestHasUserId() {
      return request.resource.data.userId == request.auth.uid;
    }
    
    // IMPORTANTE: A regra catch-all deve vir por último para não sobrescrever regras específicas
    // Por enquanto, permitimos leitura autenticada para facilitar o desenvolvimento e debugging
    match /{document=**} {
      allow read: if isAuthenticated();
      allow write: if false; // Bloqueia escrita global (regras específicas abaixo permitirão escrita)
    }
    
    // Usuários podem ler e escrever seus próprios dados
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId);
    }
    
    // Coleção de tarefas - usuários podem gerenciar suas próprias tarefas
    match /tasks/{taskId} {
      // Para documentos que já existem
      allow read: if isAuthenticated() && (resource == null || resource.data.userId == request.auth.uid);
      allow update, delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
      // Para novos documentos
      allow create: if isAuthenticated() && requestHasUserId();
    }
    
    // Coleção de notas - usuários podem gerenciar suas próprias notas
    match /notes/{noteId} {
      allow read: if isAuthenticated() && (resource == null || resource.data.userId == request.auth.uid);
      allow update, delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow create: if isAuthenticated() && requestHasUserId();
    }
    
    // Coleção de assuntos para estudo
    match /subjects/{subjectId} {
      allow read: if isAuthenticated() && (resource == null || resource.data.userId == request.auth.uid);
      allow update, delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow create: if isAuthenticated() && requestHasUserId();
    }
    
    // Coleção de flashcards
    match /flashcards/{flashcardId} {
      allow read: if isAuthenticated() && (
        resource == null || 
        resource.data.userId == request.auth.uid || 
        resource.data.createdBy == request.auth.uid
      );
      
      allow update, delete: if isAuthenticated() && (
        resource.data.userId == request.auth.uid || 
        resource.data.createdBy == request.auth.uid
      );
      
      allow create: if isAuthenticated() && (
        request.resource.data.userId == request.auth.uid || 
        request.resource.data.createdBy == request.auth.uid
      );
    }
    
    // Coleção de sessões de estudo
    match /studySessions/{sessionId} {
      allow read: if isAuthenticated() && (resource == null || resource.data.userId == request.auth.uid);
      allow update, delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow create: if isAuthenticated() && requestHasUserId();
    }
    
    // Coleção de assinaturas - usuários podem ler suas próprias assinaturas
    match /subscriptions/{subscriptionId} {
      allow read: if isAuthenticated() && (resource == null || resource.data.userId == request.auth.uid);
      allow create, update: if isAuthenticated() && requestHasUserId();
    }
  }
} 